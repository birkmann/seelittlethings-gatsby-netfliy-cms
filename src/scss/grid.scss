$grid__bp-sm: $breakpoint-sm;
$grid__bp-md: $breakpoint-md;
$grid__bp-lg: $breakpoint-lg;
$grid__bp-xl: $breakpoint-xl;
$grid__cols: 12;

$map-grid-props: (
  "": 0,
  "-sm": $grid__bp-sm,
  "-md": $grid__bp-md,
  "-lg": $grid__bp-lg,
  "-xl": $grid__bp-xl,
);

@mixin create-mq($breakpoint, $min-or-max) {
  @if ($breakpoint==0) {
    @content;
  } @else {
    @media screen and (#{$min-or-max}-width: $breakpoint) {
      @content;
    }
  }
}

@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
  @include create-mq($breakpoint, "min") {
    .col#{$modifier}-offset-0 {
      margin-left: 0;
    }

    @for $i from 1 through $grid-cols {
      .col#{$modifier}-#{$i} {
        flex-basis: (100 / ($grid-cols / $i)) * 1%;
      }

      .col#{$modifier}-offset-#{$i} {
        margin-left: (100 / ($grid-cols / $i)) * 1%;
      }
    }
  }
}

@each $modifier, $breakpoint in $map-grid-props {
  @if ($modifier== "") {
    $modifier: "-xs";
  }

  @include create-mq($breakpoint - 1, "max") {
    .hidden#{$modifier}-down {
      display: none !important;
    }
  }

  @include create-mq($breakpoint, "min") {
    .hidden#{$modifier}-up {
      display: none !important;
    }
  }
}

.container {
  width: 100%;
  max-width: 100%;
  margin: 0 auto;
  padding: 0 1rem;

  @media (min-width: $breakpoint-lg) {
    padding: 0 2rem;
  }

  @media (min-width: $breakpoint-xxl) {
    max-width: 80vw;
  }

  .fluid {
    margin: 0;
    max-width: 100%;
  }

  .row {
    display: flex;
    flex-wrap: wrap;
    width: calc(100% + 4rem);
    margin-left: -2rem;
    margin-right: -2rem;
    &.reverse-lg {
      @media (min-width: $breakpoint-lg) {
        flex-direction: row-reverse;
      }
    }

    [class^="col"] {
      padding: 0 2rem;
      width: 100%;
    }
  }

  @each $modifier, $breakpoint in $map-grid-props {
    @include create-col-classes($modifier, $grid__cols, $breakpoint);
  }
}
